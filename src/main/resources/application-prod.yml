spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
  data:
    mongodb:
      # Provide as environment variable in deployment
      uri: ${SPRING_DATA_MONGODB_URI}
  cloud:
    function:
      scan:
        enabled: false
    stream:
      defaultBinder: kafka
      function:
        definition: auditEvents
      binders:
        kafka:
          type: kafka
          environment:
            spring:
              kafka:
                bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      bindings:
        auditEvents-in-0:
          destination: audit.events
          group: ezclaim-audit
          content-type: application/json
        auditEvents-out-0:
          destination: audit.events
          content-type: application/json

app:
  cors:
    allowed-origins:
      - https://ezclaim.liuzisen.com
      - https://ezclaim-web.liuzisen.com
      - https://ezclaim-admin.liuzisen.com
  objectstore:
    # Leave endpoint unset for AWS S3; set to https://host:port for S3-compatible
    endpoint: ${APP_OBJECTSTORE_ENDPOINT:}
    region: ${APP_OBJECTSTORE_REGION:us-east-1}
    access-key: ${APP_OBJECTSTORE_ACCESS_KEY:}
    secret-key: ${APP_OBJECTSTORE_SECRET_KEY:}
    bucket: ${APP_OBJECTSTORE_BUCKET}
    path-style: ${APP_OBJECTSTORE_PATH_STYLE:false}
    # Avoid provisioning buckets in production unless explicitly enabled
    ensure-bucket: ${APP_OBJECTSTORE_ENSURE_BUCKET:false}
  security:
    jwt:
      # Provide secret via environment; only HS256 supported here
      secret: ${APP_JWT_SECRET}
      algorithm: ${APP_JWT_ALG:HS256}
      ttl: ${APP_JWT_TTL:PT12H}
