services:
  mongo:
    image: mongo:8.0
    container_name: ezclaim-mongo-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ezclaim
      MONGO_INITDB_ROOT_PASSWORD: E2ClaimPass
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: ezclaim-minio-dev
    restart: unless-stopped
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Console UI
    environment:
      MINIO_ROOT_USER: ezclaim
      MINIO_ROOT_PASSWORD: E2ClaimPass
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "--help"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-setup:
    image: minio/mc:latest
    container_name: ezclaim-minio-setup
    depends_on:
      - minio
    restart: "no"
    volumes:
      - ./infra/minio/cors.json:/config/cors.json:ro
    entrypoint: >
      /bin/sh -c '
      set -e;
      echo "Waiting for MinIO to be ready...";
      until (mc alias set local http://minio:9000 ezclaim E2ClaimPass >/dev/null 2>&1); do
        sleep 3;
      done;
      echo "Ensuring bucket and applying CORS...";
      mc mb -p local/ezclaim-dev || true;
      mc cors set local/ezclaim-dev /config/cors.json;
      echo "MinIO CORS configured for bucket ezclaim-dev";
      '

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: ezclaim-redpanda-dev
    restart: unless-stopped
    ports:
      - "9092:9092"   # Kafka API
      - "9644:9644"   # Admin API
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp
      - "1"
      - --memory
      - 1G
      - --reserve-memory
      - 0M
      - --node-id
      - "0"
      - --check=false
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://127.0.0.1:9092
    healthcheck:
      test: ["CMD", "bash", "-lc", "curl -fsS http://127.0.0.1:9644/v1/status/ready >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s

volumes:
  mongo_data:
  minio_data:
